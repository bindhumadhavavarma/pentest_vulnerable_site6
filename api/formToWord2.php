<?php
header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Headers: access");
header("Access-Control-Allow-Methods: POST");
header("Content-Type: application/json; charset=UTF-8");
header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

require_once 'vendor/autoload.php';

use PhpOffice\PhpWord\PhpWord;
use \PhpOffice\PhpWord\TemplateProcessor;
use PhpOffice\PhpWord\Settings;

Settings::setOutputEscapingEnabled(true);

require __DIR__ . '/classes/Database.php';
$db_connection = new Database();
$pdo = $db_connection->dbConnection();
$stmt = $pdo->query("select * from companies where sl = '" . $_GET['id'] . "'");
$row = $stmt->fetch(PDO::FETCH_ASSOC);
$phpWord = new PhpWord();
$date = date("m\.Y");
setlocale(LC_MONETARY, 'en_IN');
$document = new TemplateProcessor('./ACB.docx');
$document->setValue('date1', $date);
$document->setValue('addr1', $row['address']);
$document->setValue('addr2', $row['address2']);
$document->setValue('addr3', $row['address3']);
$document->setValue('addr4', $row['address4']);
$document->setValue('addr5', $row['address5']);
//$document->setValue('type', $row['app_type']);
// $document->setValue('emailrequestdate', date("j\.m\.Y", strtotime($row['mail_received_date'])));

$stmt = $pdo->query("select * from transaction_log where customer='" . $_GET['id'] . "' and payment_status='Unpaid'");
$transactions = $stmt->fetchAll(PDO::FETCH_ASSOC);

$maildates = '';
$total = 0;
$refs = '';
$document->cloneRow('sl', count($transactions));
$type = ["web"=>false, "mobile"=>false, "network"=>false];
$replacements = array();
for ($i = 1; $i <= count($transactions); $i++) {
    $document->setValue('sl#' . $i, $i);
    $document->setValue('appname#' . $i, $transactions[$i - 1]["app_name"]);
    $document->setValue('invdate#' . $i, date("j\.m\.Y", strtotime($transactions[$i - 1]["invoice_date"])));
    $document->setValue('category#' . $i, $transactions[$i - 1]["category"]);
    $document->setValue('amount#' . $i, preg_replace("/(\d+?)(?=(\d\d)+(\d)(?!\d))(\.\d+)?/i", "$1,", $transactions[$i - 1]["gross_amount"]));
    $maildates = $maildates . " " . date("j\.m\.Y", strtotime($transactions[$i - 1]["mail_received_date"])) . ",";
    $total = $total + $transactions[$i - 1]["gross_amount"];
    $replacement = array();
    $replacement["letternum"] = ($i + 4) . ". Lr. No. ITC51-24024(34)/4/2021-CSTY-APTS, dated: " . date("j\.m\.Y", strtotime($transactions[$i - 1]["invoice_date"]));
    array_push($replacements, $replacement);
    $refs = $refs . "(" . ($i + 4) . ")";
    $type[$transactions[$i-1]["app_type"]]=true;
}
$document->cloneBlock('lrnumbers', count($transactions), true, false, $replacements);
$document->setValue('emailrequestdate', $maildates);


$typestr = '';
if($type["web"])$typestr="Web";
if($type["mobile"])$typestr=" Mobile";
if($type["network"])$typestr=" Network";
$document->setValue('type', $typestr);
$document->setValue('refs', $refs);
$document->setValue('total', preg_replace("/(\d+?)(?=(\d\d)+(\d)(?!\d))(\.\d+)?/i", "$1,", $total));
$document->saveAs('reminder.docx');
//download code
header('Content-Description: File Transfer');
header("Content-Type: application/docx");
header("Content-Transfer-Encoding: binary");
header('Content-Disposition: attachment;filename="reminder.docx"');
readfile('reminder.docx');



function getIndianCurrency(float $number)
{
    $decimal = round($number - ($no = floor($number)), 2) * 100;
    $hundred = null;
    $digits_length = strlen($no);
    $i = 0;
    $str = array();
    $words = array(
        0 => '', 1 => 'One', 2 => 'Two',
        3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six',
        7 => 'Seven', 8 => 'Eight', 9 => 'Nine',
        10 => 'Ten', 11 => 'Eleven', 12 => 'Twelve',
        13 => 'Thirteen', 14 => 'Fourteen', 15 => 'Fifteen',
        16 => 'Sixteen', 17 => 'Seventeen', 18 => 'Eighteen',
        19 => 'Nineteen', 20 => 'Twenty', 30 => 'Thirty',
        40 => 'Forty', 50 => 'Fifty', 60 => 'Sixty',
        70 => 'Seventy', 80 => 'Eighty', 90 => 'Ninety'
    );
    $digits = array('', 'hundred', 'thousand', 'lakh', 'crore');
    while ($i < $digits_length) {
        $divider = ($i == 2) ? 10 : 100;
        $number = floor($no % $divider);
        $no = floor($no / $divider);
        $i += $divider == 10 ? 1 : 2;
        if ($number) {
            $plural = (($counter = count($str)) && $number > 9) ? 's' : null;
            $hundred = ($counter == 1 && $str[0]) ? ' and ' : null;
            $str[] = ($number < 21) ? $words[$number] . ' ' . $digits[$counter] . $plural . ' ' . $hundred : $words[floor($number / 10) * 10] . ' ' . $words[$number % 10] . ' ' . $digits[$counter] . $plural . ' ' . $hundred;
        } else $str[] = null;
    }
    $Rupees = implode('', array_reverse($str));
    $paise = ($decimal > 0) ? "." . ($words[$decimal / 10] . " " . $words[$decimal % 10]) . ' Paise' : '';
    return ($Rupees ? $Rupees . 'Rupees ' : '') . $paise . "Only";
}
